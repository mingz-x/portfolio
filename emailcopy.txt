이메일 아이콘을 클릭했을 때 이메일 주소가 자동으로 복사되게 하려면, **Clipboard API**를 사용하여 이메일 주소를 클립보드에 복사하는 방법을 사용할 수 있습니다. 이를 통해 사용자가 이메일 주소를 클릭만 해도 해당 이메일 주소가 클립보드에 복사됩니다.

방법 1: Clipboard API 사용
html
코드 복사
<template>
  <div>
    <!-- 이메일 아이콘 클릭 시 이메일 주소를 클립보드에 복사 -->
    <div @click="copyEmailToClipboard" class="email-icon">
      <i class="fas fa-envelope"></i> <!-- 이메일 아이콘 -->
      <span>Click to copy email</span>
    </div>
  </div>
</template>

<script>
export default {
  methods: {
    copyEmailToClipboard() {
      const email = "example@example.com";  // 복사할 이메일 주소
      navigator.clipboard.writeText(email)  // 클립보드에 이메일 주소 복사
        .then(() => {
          alert('이메일 주소가 클립보드에 복사되었습니다!'); // 복사 성공 시 알림
        })
        .catch(err => {
          console.error('이메일 주소 복사 실패: ', err);
        });
    }
  }
}
</script>

<style scoped>
.email-icon {
  cursor: pointer;
  font-size: 24px;
  color: #4CAF50;
  display: flex;
  align-items: center;
}

.email-icon span {
  margin-left: 10px;
}
</style>
설명:
@click="copyEmailToClipboard": 이메일 아이콘을 클릭하면 copyEmailToClipboard 메서드가 실행됩니다.
navigator.clipboard.writeText(email): Clipboard API의 writeText 메서드를 사용하여 클립보드에 이메일 주소를 복사합니다.
이 메서드는 비동기이므로 then()과 catch()로 성공과 실패를 처리할 수 있습니다.
alert(): 이메일 주소가 성공적으로 복사되었을 때 알림을 띄워 사용자에게 복사가 완료되었음을 알려줍니다.
방법 2: document.execCommand() 사용 (구식 방법)
Clipboard API가 지원되지 않는 구형 브라우저를 고려할 때, document.execCommand() 방법을 사용할 수 있습니다. 하지만 이 방법은 이제 대부분의 최신 브라우저에서는 권장되지 않으며, Clipboard API가 더 안전하고 현대적인 방법입니다.

html
코드 복사
<template>
  <div>
    <!-- 이메일 아이콘 클릭 시 이메일 주소를 클립보드에 복사 -->
    <div @click="copyEmailToClipboard" class="email-icon">
      <i class="fas fa-envelope"></i> <!-- 이메일 아이콘 -->
      <span>Click to copy email</span>
    </div>
  </div>
</template>

<script>
export default {
  methods: {
    copyEmailToClipboard() {
      const email = "example@example.com";  // 복사할 이메일 주소

      // 임시 텍스트 필드를 생성하여 이메일을 선택 후 복사
      const tempInput = document.createElement("input");
      document.body.appendChild(tempInput);
      tempInput.value = email;
      tempInput.select();
      document.execCommand("copy");  // 이메일 주소 복사
      document.body.removeChild(tempInput);  // 임시 입력 필드 제거

      alert('이메일 주소가 클립보드에 복사되었습니다!');
    }
  }
}
</script>

<style scoped>
.email-icon {
  cursor: pointer;
  font-size: 24px;
  color: #4CAF50;
  display: flex;
  align-items: center;
}

.email-icon span {
  margin-left: 10px;
}
</style>
설명:
이 방법에서는 document.createElement("input")로 임시 입력 필드를 생성하고, 그 안에 이메일 주소를 설정한 뒤 select()와 execCommand("copy")를 사용하여 클립보드로 복사합니다.
임시로 생성한 입력 필드는 복사 후 제거됩니다.
alert()로 이메일 복사가 완료되었음을 사용자에게 알려줍니다.
결론:
**Clipboard API**를 사용하는 방법이 최신 브라우저에서 더 권장되는 방법입니다. navigator.clipboard.writeText()를 사용하면 더 간단하게 구현할 수 있고, 더 안전하고 신뢰할 수 있습니다.
구형 브라우저 호환성을 고려할 경우, document.execCommand() 방법을 사용할 수 있지만, 최신 웹 표준에서는 권장되지 않습니다.